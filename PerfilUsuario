class Hobby(val título: String, val descripción: String, val urlPhoto: String? = null)

class PerfilUsuario(
    val ID: Int,
    val nombres: String,
    val apellidos: String,
    val urlPhoto: String?,
    val edad: Int,
    val correo: String,
    val biografía: String?,
    estado: String,
) {
    var estado: String = estado
        set(value) {
            if (value == "Activo" || value == "Pendiente" || value == "Inactivo") {
                field = value
            } else {
                throw IllegalArgumentException("El estado debe ser 'Activo', 'Pendiente' o 'Inactivo'")
            }
        }

    private val hobbies = mutableListOf<Hobby>()

    fun agregarHobby(hobby: Hobby) {
        hobbies.add(hobby)
    }

    fun mostrarInformación() {
        println("ID: $ID")
        println("Nombres: $nombres")
        println("Apellidos: $apellidos")
        println("URL de foto de perfil: $urlPhoto")
        println("Edad: $edad")
        println("Correo electrónico: $correo")
        println("Biografía: ${biografía ?: "N/A"}")
        println("Estado: $estado")
        println("Hobbies:")
        if (hobbies.isNotEmpty()) {
            hobbies.forEach { hobby ->
                println("  Título: ${hobby.título}")
                println("  Descripción: ${hobby.descripción}")
                println("  URL de foto del hobby: ${hobby.urlPhoto ?: "N/A"}")
                println()
            }
        } else {
            println("  Sin hobbies.")
        }
    }
}
